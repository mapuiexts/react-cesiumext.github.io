/*! For license information please see OrientedBoundingBox-ee3011f6.js.LICENSE.txt */
define(["exports","./Transforms-d3d3b2a9","./Matrix2-73789715","./RuntimeError-4f8ec8a2","./defaultValue-97284df2","./EllipsoidTangentPlane-7ae496b2","./ComponentDatatype-e7fbe225","./Plane-e916220d"],(function(a,t,e,n,r,i,s,o){"use strict";function C(a,t){this.center=e.Cartesian3.clone(r.defaultValue(a,e.Cartesian3.ZERO)),this.halfAxes=e.Matrix3.clone(r.defaultValue(t,e.Matrix3.ZERO))}C.packedLength=e.Cartesian3.packedLength+e.Matrix3.packedLength,C.pack=function(a,t,n){return n=r.defaultValue(n,0),e.Cartesian3.pack(a.center,t,n),e.Matrix3.pack(a.halfAxes,t,n+e.Cartesian3.packedLength),t},C.unpack=function(a,t,n){return t=r.defaultValue(t,0),r.defined(n)||(n=new C),e.Cartesian3.unpack(a,t,n.center),e.Matrix3.unpack(a,t+e.Cartesian3.packedLength,n.halfAxes),n};const c=new e.Cartesian3,u=new e.Cartesian3,l=new e.Cartesian3,d=new e.Cartesian3,h=new e.Cartesian3,x=new e.Cartesian3,m=new e.Matrix3,f={unitary:new e.Matrix3,diagonal:new e.Matrix3};C.fromPoints=function(a,t){if(r.defined(t)||(t=new C),!r.defined(a)||0===a.length)return t.halfAxes=e.Matrix3.ZERO,t.center=e.Cartesian3.ZERO,t;let n;const i=a.length,s=e.Cartesian3.clone(a[0],c);for(n=1;n<i;n++)e.Cartesian3.add(s,a[n],s);const o=1/i;e.Cartesian3.multiplyByScalar(s,o,s);let M,p=0,g=0,y=0,b=0,N=0,T=0;for(n=0;n<i;n++)M=e.Cartesian3.subtract(a[n],s,u),p+=M.x*M.x,g+=M.x*M.y,y+=M.x*M.z,b+=M.y*M.y,N+=M.y*M.z,T+=M.z*M.z;p*=o,g*=o,y*=o,b*=o,N*=o,T*=o;const O=m;O[0]=p,O[1]=g,O[2]=y,O[3]=g,O[4]=b,O[5]=N,O[6]=y,O[7]=N,O[8]=T;const A=e.Matrix3.computeEigenDecomposition(O,f),P=e.Matrix3.clone(A.unitary,t.halfAxes);let I=e.Matrix3.getColumn(P,0,d),R=e.Matrix3.getColumn(P,1,h),E=e.Matrix3.getColumn(P,2,x),S=-Number.MAX_VALUE,U=-Number.MAX_VALUE,L=-Number.MAX_VALUE,z=Number.MAX_VALUE,B=Number.MAX_VALUE,V=Number.MAX_VALUE;for(n=0;n<i;n++)M=a[n],S=Math.max(e.Cartesian3.dot(I,M),S),U=Math.max(e.Cartesian3.dot(R,M),U),L=Math.max(e.Cartesian3.dot(E,M),L),z=Math.min(e.Cartesian3.dot(I,M),z),B=Math.min(e.Cartesian3.dot(R,M),B),V=Math.min(e.Cartesian3.dot(E,M),V);I=e.Cartesian3.multiplyByScalar(I,.5*(z+S),I),R=e.Cartesian3.multiplyByScalar(R,.5*(B+U),R),E=e.Cartesian3.multiplyByScalar(E,.5*(V+L),E);const _=e.Cartesian3.add(I,R,t.center);e.Cartesian3.add(_,E,_);const k=l;return k.x=S-z,k.y=U-B,k.z=L-V,e.Cartesian3.multiplyByScalar(k,.5,k),e.Matrix3.multiplyByScale(t.halfAxes,k,t.halfAxes),t};const M=new e.Cartesian3,p=new e.Cartesian3;function w(a,t,n,i,s,o,c,u,l,d,h){r.defined(h)||(h=new C);const x=h.halfAxes;e.Matrix3.setColumn(x,0,t,x),e.Matrix3.setColumn(x,1,n,x),e.Matrix3.setColumn(x,2,i,x);let m=M;m.x=(s+o)/2,m.y=(c+u)/2,m.z=(l+d)/2;const f=p;f.x=(o-s)/2,f.y=(u-c)/2,f.z=(d-l)/2;const g=h.center;return m=e.Matrix3.multiplyByVector(x,m,m),e.Cartesian3.add(a,m,g),e.Matrix3.multiplyByScale(x,f,x),h}const g=new e.Cartographic,y=new e.Cartesian3,b=new e.Cartographic,N=new e.Cartographic,T=new e.Cartographic,O=new e.Cartographic,A=new e.Cartographic,P=new e.Cartesian3,I=new e.Cartesian3,R=new e.Cartesian3,E=new e.Cartesian3,S=new e.Cartesian3,U=new e.Cartesian2,L=new e.Cartesian2,z=new e.Cartesian2,B=new e.Cartesian2,V=new e.Cartesian2,_=new e.Cartesian3,k=new e.Cartesian3,W=new e.Cartesian3,D=new e.Cartesian3,X=new e.Cartesian2,q=new e.Cartesian3,j=new e.Cartesian3,Z=new e.Cartesian3,v=new o.Plane(e.Cartesian3.UNIT_X,0);C.fromRectangle=function(a,t,n,c,u){let l,d,h,x,m,f,M;if(t=r.defaultValue(t,0),n=r.defaultValue(n,0),c=r.defaultValue(c,e.Ellipsoid.WGS84),a.width<=s.CesiumMath.PI){const r=e.Rectangle.center(a,g),s=c.cartographicToCartesian(r,y),p=new i.EllipsoidTangentPlane(s,c);M=p.plane;const _=r.longitude,k=a.south<0&&a.north>0?0:r.latitude,W=e.Cartographic.fromRadians(_,a.north,n,b),D=e.Cartographic.fromRadians(a.west,a.north,n,N),X=e.Cartographic.fromRadians(a.west,k,n,T),q=e.Cartographic.fromRadians(a.west,a.south,n,O),j=e.Cartographic.fromRadians(_,a.south,n,A),Z=c.cartographicToCartesian(W,P);let v=c.cartographicToCartesian(D,I);const Y=c.cartographicToCartesian(X,R);let G=c.cartographicToCartesian(q,E);const F=c.cartographicToCartesian(j,S),H=p.projectPointToNearestOnPlane(Z,U),J=p.projectPointToNearestOnPlane(v,L),K=p.projectPointToNearestOnPlane(Y,z),Q=p.projectPointToNearestOnPlane(G,B),$=p.projectPointToNearestOnPlane(F,V);return l=Math.min(J.x,K.x,Q.x),d=-l,x=Math.max(J.y,H.y),h=Math.min(Q.y,$.y),D.height=q.height=t,v=c.cartographicToCartesian(D,I),G=c.cartographicToCartesian(q,E),m=Math.min(o.Plane.getPointDistance(M,v),o.Plane.getPointDistance(M,G)),f=n,w(p.origin,p.xAxis,p.yAxis,p.zAxis,l,d,h,x,m,f,u)}const p=a.south>0,Y=a.north<0,G=p?a.south:Y?a.north:0,F=e.Rectangle.center(a,g).longitude,H=e.Cartesian3.fromRadians(F,G,n,c,_);H.z=0;const J=Math.abs(H.x)<s.CesiumMath.EPSILON10&&Math.abs(H.y)<s.CesiumMath.EPSILON10?e.Cartesian3.UNIT_X:e.Cartesian3.normalize(H,k),K=e.Cartesian3.UNIT_Z,Q=e.Cartesian3.cross(J,K,W);M=o.Plane.fromPointNormal(H,J,v);const $=e.Cartesian3.fromRadians(F+s.CesiumMath.PI_OVER_TWO,G,n,c,D);d=e.Cartesian3.dot(o.Plane.projectPointOntoPlane(M,$,X),Q),l=-d,x=e.Cartesian3.fromRadians(0,a.north,Y?t:n,c,q).z,h=e.Cartesian3.fromRadians(0,a.south,p?t:n,c,j).z;const aa=e.Cartesian3.fromRadians(a.east,G,n,c,Z);return m=o.Plane.getPointDistance(M,aa),f=0,w(H,Q,K,J,l,d,h,x,m,f,u)},C.fromTransformation=function(a,t){return r.defined(t)||(t=new C),t.center=e.Matrix4.getTranslation(a,t.center),t.halfAxes=e.Matrix4.getMatrix3(a,t.halfAxes),t.halfAxes=e.Matrix3.multiplyByScalar(t.halfAxes,.5,t.halfAxes),t},C.clone=function(a,t){if(r.defined(a))return r.defined(t)?(e.Cartesian3.clone(a.center,t.center),e.Matrix3.clone(a.halfAxes,t.halfAxes),t):new C(a.center,a.halfAxes)},C.intersectPlane=function(a,n){const r=a.center,i=n.normal,s=a.halfAxes,o=i.x,c=i.y,u=i.z,l=Math.abs(o*s[e.Matrix3.COLUMN0ROW0]+c*s[e.Matrix3.COLUMN0ROW1]+u*s[e.Matrix3.COLUMN0ROW2])+Math.abs(o*s[e.Matrix3.COLUMN1ROW0]+c*s[e.Matrix3.COLUMN1ROW1]+u*s[e.Matrix3.COLUMN1ROW2])+Math.abs(o*s[e.Matrix3.COLUMN2ROW0]+c*s[e.Matrix3.COLUMN2ROW1]+u*s[e.Matrix3.COLUMN2ROW2]),d=e.Cartesian3.dot(i,r)+n.distance;return d<=-l?t.Intersect.OUTSIDE:d>=l?t.Intersect.INSIDE:t.Intersect.INTERSECTING};const Y=new e.Cartesian3,G=new e.Cartesian3,F=new e.Cartesian3,H=new e.Cartesian3,J=new e.Cartesian3,K=new e.Cartesian3;C.distanceSquaredTo=function(a,t){const n=e.Cartesian3.subtract(t,a.center,M),r=a.halfAxes;let i=e.Matrix3.getColumn(r,0,Y),o=e.Matrix3.getColumn(r,1,G),c=e.Matrix3.getColumn(r,2,F);const u=e.Cartesian3.magnitude(i),l=e.Cartesian3.magnitude(o),d=e.Cartesian3.magnitude(c);let h=!0,x=!0,m=!0;u>0?e.Cartesian3.divideByScalar(i,u,i):h=!1,l>0?e.Cartesian3.divideByScalar(o,l,o):x=!1,d>0?e.Cartesian3.divideByScalar(c,d,c):m=!1;const f=!h+!x+!m;let p,g,y;if(1===f){let a=i;p=o,g=c,x?m||(a=c,g=i):(a=o,p=i),y=e.Cartesian3.cross(p,g,J),a===i?i=y:a===o?o=y:a===c&&(c=y)}else if(2===f){p=i,x?p=o:m&&(p=c);let a=e.Cartesian3.UNIT_Y;a.equalsEpsilon(p,s.CesiumMath.EPSILON3)&&(a=e.Cartesian3.UNIT_X),g=e.Cartesian3.cross(p,a,H),e.Cartesian3.normalize(g,g),y=e.Cartesian3.cross(p,g,J),e.Cartesian3.normalize(y,y),p===i?(o=g,c=y):p===o?(c=g,i=y):p===c&&(i=g,o=y)}else 3===f&&(i=e.Cartesian3.UNIT_X,o=e.Cartesian3.UNIT_Y,c=e.Cartesian3.UNIT_Z);const b=K;b.x=e.Cartesian3.dot(n,i),b.y=e.Cartesian3.dot(n,o),b.z=e.Cartesian3.dot(n,c);let N,T=0;return b.x<-u?(N=b.x+u,T+=N*N):b.x>u&&(N=b.x-u,T+=N*N),b.y<-l?(N=b.y+l,T+=N*N):b.y>l&&(N=b.y-l,T+=N*N),b.z<-d?(N=b.z+d,T+=N*N):b.z>d&&(N=b.z-d,T+=N*N),T};const Q=new e.Cartesian3,$=new e.Cartesian3;C.computePlaneDistances=function(a,n,i,s){r.defined(s)||(s=new t.Interval);let o=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY;const u=a.center,l=a.halfAxes,d=e.Matrix3.getColumn(l,0,Y),h=e.Matrix3.getColumn(l,1,G),x=e.Matrix3.getColumn(l,2,F),m=e.Cartesian3.add(d,h,Q);e.Cartesian3.add(m,x,m),e.Cartesian3.add(m,u,m);const f=e.Cartesian3.subtract(m,n,$);let M=e.Cartesian3.dot(i,f);return o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.add(u,d,m),e.Cartesian3.add(m,h,m),e.Cartesian3.subtract(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.add(u,d,m),e.Cartesian3.subtract(m,h,m),e.Cartesian3.add(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.add(u,d,m),e.Cartesian3.subtract(m,h,m),e.Cartesian3.subtract(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.subtract(u,d,m),e.Cartesian3.add(m,h,m),e.Cartesian3.add(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.subtract(u,d,m),e.Cartesian3.add(m,h,m),e.Cartesian3.subtract(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.subtract(u,d,m),e.Cartesian3.subtract(m,h,m),e.Cartesian3.add(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),e.Cartesian3.subtract(u,d,m),e.Cartesian3.subtract(m,h,m),e.Cartesian3.subtract(m,x,m),e.Cartesian3.subtract(m,n,f),M=e.Cartesian3.dot(i,f),o=Math.min(M,o),c=Math.max(M,c),s.start=o,s.stop=c,s};const aa=new e.Cartesian3,ta=new e.Cartesian3,ea=new e.Cartesian3;C.computeCorners=function(a,t){r.defined(t)||(t=[new e.Cartesian3,new e.Cartesian3,new e.Cartesian3,new e.Cartesian3,new e.Cartesian3,new e.Cartesian3,new e.Cartesian3,new e.Cartesian3]);const n=a.center,i=a.halfAxes,s=e.Matrix3.getColumn(i,0,aa),o=e.Matrix3.getColumn(i,1,ta),c=e.Matrix3.getColumn(i,2,ea);return e.Cartesian3.clone(n,t[0]),e.Cartesian3.subtract(t[0],s,t[0]),e.Cartesian3.subtract(t[0],o,t[0]),e.Cartesian3.subtract(t[0],c,t[0]),e.Cartesian3.clone(n,t[1]),e.Cartesian3.subtract(t[1],s,t[1]),e.Cartesian3.subtract(t[1],o,t[1]),e.Cartesian3.add(t[1],c,t[1]),e.Cartesian3.clone(n,t[2]),e.Cartesian3.subtract(t[2],s,t[2]),e.Cartesian3.add(t[2],o,t[2]),e.Cartesian3.subtract(t[2],c,t[2]),e.Cartesian3.clone(n,t[3]),e.Cartesian3.subtract(t[3],s,t[3]),e.Cartesian3.add(t[3],o,t[3]),e.Cartesian3.add(t[3],c,t[3]),e.Cartesian3.clone(n,t[4]),e.Cartesian3.add(t[4],s,t[4]),e.Cartesian3.subtract(t[4],o,t[4]),e.Cartesian3.subtract(t[4],c,t[4]),e.Cartesian3.clone(n,t[5]),e.Cartesian3.add(t[5],s,t[5]),e.Cartesian3.subtract(t[5],o,t[5]),e.Cartesian3.add(t[5],c,t[5]),e.Cartesian3.clone(n,t[6]),e.Cartesian3.add(t[6],s,t[6]),e.Cartesian3.add(t[6],o,t[6]),e.Cartesian3.subtract(t[6],c,t[6]),e.Cartesian3.clone(n,t[7]),e.Cartesian3.add(t[7],s,t[7]),e.Cartesian3.add(t[7],o,t[7]),e.Cartesian3.add(t[7],c,t[7]),t};const na=new e.Matrix3;C.computeTransformation=function(a,t){r.defined(t)||(t=new e.Matrix4);const n=a.center,i=e.Matrix3.multiplyByUniformScale(a.halfAxes,2,na);return e.Matrix4.fromRotationTranslation(i,n,t)};const ra=new t.BoundingSphere;C.isOccluded=function(a,e){const n=t.BoundingSphere.fromOrientedBoundingBox(a,ra);return!e.isBoundingSphereVisible(n)},C.prototype.intersectPlane=function(a){return C.intersectPlane(this,a)},C.prototype.distanceSquaredTo=function(a){return C.distanceSquaredTo(this,a)},C.prototype.computePlaneDistances=function(a,t,e){return C.computePlaneDistances(this,a,t,e)},C.prototype.computeCorners=function(a){return C.computeCorners(this,a)},C.prototype.computeTransformation=function(a){return C.computeTransformation(this,a)},C.prototype.isOccluded=function(a){return C.isOccluded(this,a)},C.equals=function(a,t){return a===t||r.defined(a)&&r.defined(t)&&e.Cartesian3.equals(a.center,t.center)&&e.Matrix3.equals(a.halfAxes,t.halfAxes)},C.prototype.clone=function(a){return C.clone(this,a)},C.prototype.equals=function(a){return C.equals(this,a)},a.OrientedBoundingBox=C}));
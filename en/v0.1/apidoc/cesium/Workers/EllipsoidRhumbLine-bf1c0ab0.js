/*! For license information please see EllipsoidRhumbLine-bf1c0ab0.js.LICENSE.txt */
define(["exports","./Matrix2-21f90abf","./RuntimeError-cef79f54","./defaultValue-4607806f","./ComponentDatatype-4028c72d"],(function(t,i,e,a,n){"use strict";function s(t,i,e){if(0===t)return i*e;const a=t*t,n=a*a,h=n*a,o=h*a,c=o*a,M=c*a,m=e;return i*((1-a/4-3*n/64-5*h/256-175*o/16384-441*c/65536-4851*M/1048576)*m-(3*a/8+3*n/32+45*h/1024+105*o/4096+2205*c/131072+6237*M/524288)*Math.sin(2*m)+(15*n/256+45*h/1024+525*o/16384+1575*c/65536+155925*M/8388608)*Math.sin(4*m)-(35*h/3072+175*o/12288+3675*c/262144+13475*M/1048576)*Math.sin(6*m)+(315*o/131072+2205*c/524288+43659*M/8388608)*Math.sin(8*m)-(693*c/1310720+6237*M/5242880)*Math.sin(10*m)+1001*M/8388608*Math.sin(12*m))}function u(t,i){if(0===t)return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)));const e=t*Math.sin(i);return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}const h=new i.Cartesian3,o=new i.Cartesian3;function l(t,e,a,c){i.Cartesian3.normalize(c.cartographicToCartesian(e,o),h),i.Cartesian3.normalize(c.cartographicToCartesian(a,o),o);const M=c.maximumRadius,m=c.minimumRadius,g=M*M,_=m*m;t._ellipticitySquared=(g-_)/g,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=i.Cartographic.clone(e,t._start),t._start.height=0,t._end=i.Cartographic.clone(a,t._end),t._end.height=0,t._heading=function(t,i,e,a,h){const o=u(t._ellipticity,e),c=u(t._ellipticity,h);return Math.atan2(n.CesiumMath.negativePiToPi(a-i),c-o)}(t,e.longitude,e.latitude,a.longitude,a.latitude),t._distance=function(t,i,e,a,h,o,c){const M=t._heading,m=o-a;let g=0;if(n.CesiumMath.equalsEpsilon(Math.abs(M),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8))if(i===e)g=i*Math.cos(h)*n.CesiumMath.negativePiToPi(m);else{const e=Math.sin(h);g=i*Math.cos(h)*n.CesiumMath.negativePiToPi(m)/Math.sqrt(1-t._ellipticitySquared*e*e)}else{const e=s(t._ellipticity,i,h);g=(s(t._ellipticity,i,c)-e)/Math.cos(M)}return Math.abs(g)}(t,c.maximumRadius,c.minimumRadius,e.longitude,e.latitude,a.longitude,a.latitude)}function r(t,e,h,o,c,M){if(0===h)return i.Cartographic.clone(t,M);const m=c*c;let g,_,p;if(Math.abs(n.CesiumMath.PI_OVER_TWO-Math.abs(e))>n.CesiumMath.EPSILON8){_=function(t,i,e){const a=t/e;if(0===i)return a;const n=a*a,h=n*a,o=h*a,c=i*i,M=c*c,m=M*c,g=m*c,_=g*c,p=_*c,f=Math.sin(2*a),C=Math.cos(2*a),P=Math.sin(4*a),O=Math.cos(4*a),E=Math.sin(6*a),I=Math.cos(6*a),T=Math.sin(8*a),R=Math.cos(8*a),y=Math.sin(10*a);return a+a*c/4+7*a*M/64+15*a*m/256+579*a*g/16384+1515*a*_/65536+16837*a*p/1048576+(3*a*M/16+45*a*m/256-a*(32*n-561)*g/4096-a*(232*n-1677)*_/16384+a*(399985-90560*n+512*o)*p/5242880)*C+(21*a*m/256+483*a*g/4096-a*(224*n-1969)*_/16384-a*(33152*n-112599)*p/1048576)*O+(151*a*g/4096+4681*a*_/65536+1479*a*p/16384-453*h*p/32768)*I+(1097*a*_/65536+42783*a*p/1048576)*R+8011*a*p/1048576*Math.cos(10*a)+(3*c/8+3*M/16+213*m/2048-3*n*m/64+255*g/4096-33*n*g/512+20861*_/524288-33*n*_/512+o*_/1024+28273*p/1048576-471*n*p/8192+9*o*p/4096)*f+(21*M/256+21*m/256+533*g/8192-21*n*g/512+197*_/4096-315*n*_/4096+584039*p/16777216-12517*n*p/131072+7*o*p/2048)*P+(151*m/6144+151*g/4096+5019*_/131072-453*n*_/16384+26965*p/786432-8607*n*p/131072)*E+(1097*g/131072+1097*_/65536+225797*p/10485760-1097*n*p/65536)*T+(8011*_/2621440+8011*p/1048576)*y+293393*p/251658240*Math.sin(12*a)}(s(c,o,t.latitude)+h*Math.cos(e),c,o);const i=u(c,t.latitude),a=u(c,_);p=Math.tan(e)*(a-i),g=n.CesiumMath.negativePiToPi(t.longitude+p)}else{let i;if(_=t.latitude,0===c)i=o*Math.cos(t.latitude);else{const e=Math.sin(t.latitude);i=o*Math.cos(t.latitude)/Math.sqrt(1-m*e*e)}p=h/i,g=e>0?n.CesiumMath.negativePiToPi(t.longitude+p):n.CesiumMath.negativePiToPi(t.longitude-p)}return a.defined(M)?(M.longitude=g,M.latitude=_,M.height=0,M):new i.Cartographic(g,_,0)}function d(t,e,n){const h=a.defaultValue(n,i.Ellipsoid.WGS84);this._ellipsoid=h,this._start=new i.Cartographic,this._end=new i.Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,a.defined(t)&&a.defined(e)&&l(this,t,e,h)}Object.defineProperties(d.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return this._heading}}}),d.fromStartHeadingDistance=function(t,e,h,o,c){const M=a.defaultValue(o,i.Ellipsoid.WGS84),m=M.maximumRadius,g=M.minimumRadius,_=m*m,p=g*g,f=Math.sqrt((_-p)/_),C=r(t,e=n.CesiumMath.negativePiToPi(e),h,M.maximumRadius,f);return!a.defined(c)||a.defined(o)&&!o.equals(c.ellipsoid)?new d(t,C,M):(c.setEndPoints(t,C),c)},d.prototype.setEndPoints=function(t,i){l(this,t,i,this._ellipsoid)},d.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},d.prototype.interpolateUsingSurfaceDistance=function(t,i){return r(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},d.prototype.findIntersectionWithLongitude=function(t,e){const h=this._ellipticity,o=this._heading,c=Math.abs(o),M=this._start;if(t=n.CesiumMath.negativePiToPi(t),n.CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,n.CesiumMath.EPSILON14)&&(t=n.CesiumMath.sign(M.longitude)*Math.PI),a.defined(e)||(e=new i.Cartographic),Math.abs(n.CesiumMath.PI_OVER_TWO-c)<=n.CesiumMath.EPSILON8)return e.longitude=t,e.latitude=M.latitude,e.height=0,e;if(n.CesiumMath.equalsEpsilon(Math.abs(n.CesiumMath.PI_OVER_TWO-c),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){if(n.CesiumMath.equalsEpsilon(t,M.longitude,n.CesiumMath.EPSILON12))return;return e.longitude=t,e.latitude=n.CesiumMath.PI_OVER_TWO*n.CesiumMath.sign(n.CesiumMath.PI_OVER_TWO-o),e.height=0,e}const m=M.latitude,g=h*Math.sin(m),_=Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+m))*Math.exp((t-M.longitude)/Math.tan(o)),p=(1+g)/(1-g);let f,C=M.latitude;do{f=C;const t=h*Math.sin(f),i=(1+t)/(1-t);C=2*Math.atan(_*Math.pow(i/p,h/2))-n.CesiumMath.PI_OVER_TWO}while(!n.CesiumMath.equalsEpsilon(C,f,n.CesiumMath.EPSILON12));return e.longitude=t,e.latitude=C,e.height=0,e},d.prototype.findIntersectionWithLatitude=function(t,e){const h=this._ellipticity,o=this._heading,c=this._start;if(n.CesiumMath.equalsEpsilon(Math.abs(o),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8))return;const M=u(h,c.latitude),m=u(h,t),g=Math.tan(o)*(m-M),_=n.CesiumMath.negativePiToPi(c.longitude+g);return a.defined(e)?(e.longitude=_,e.latitude=t,e.height=0,e):new i.Cartographic(_,t,0)},t.EllipsoidRhumbLine=d}));
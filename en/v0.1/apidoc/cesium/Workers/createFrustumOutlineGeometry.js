define(["./defaultValue-f6d5e6da","./Transforms-f17097e5","./Matrix3-b2351961","./ComponentDatatype-ab629b88","./FrustumGeometry-a659c64b","./GeometryAttribute-9c1a6bab","./GeometryAttributes-1e4ddcd2","./Math-355606c6","./Matrix2-7a8e9daf","./RuntimeError-9b4ce3fb","./combine-0c102d93","./WebGLConstants-7f557f93","./Plane-5931b53e","./VertexFormat-fbdec922"],(function(e,t,r,n,a,u,i,o,c,s,p,m,d,f){"use strict";const h=0;function l(n){const u=n.frustum,i=n.orientation,o=n.origin,c=e.defaultValue(n._drawNearPlane,!0);let s,p;u instanceof a.PerspectiveFrustum?(s=h,p=a.PerspectiveFrustum.packedLength):u instanceof a.OrthographicFrustum&&(s=1,p=a.OrthographicFrustum.packedLength),this._frustumType=s,this._frustum=u.clone(),this._origin=r.Cartesian3.clone(o),this._orientation=t.Quaternion.clone(i),this._drawNearPlane=c,this._workerName="createFrustumOutlineGeometry",this.packedLength=2+p+r.Cartesian3.packedLength+t.Quaternion.packedLength}l.pack=function(n,u,i){i=e.defaultValue(i,0);const o=n._frustumType,c=n._frustum;return u[i++]=o,o===h?(a.PerspectiveFrustum.pack(c,u,i),i+=a.PerspectiveFrustum.packedLength):(a.OrthographicFrustum.pack(c,u,i),i+=a.OrthographicFrustum.packedLength),r.Cartesian3.pack(n._origin,u,i),i+=r.Cartesian3.packedLength,t.Quaternion.pack(n._orientation,u,i),u[i+=t.Quaternion.packedLength]=n._drawNearPlane?1:0,u};const g=new a.PerspectiveFrustum,_=new a.OrthographicFrustum,k=new t.Quaternion,y=new r.Cartesian3;return l.unpack=function(n,u,i){u=e.defaultValue(u,0);const o=n[u++];let c;o===h?(c=a.PerspectiveFrustum.unpack(n,u,g),u+=a.PerspectiveFrustum.packedLength):(c=a.OrthographicFrustum.unpack(n,u,_),u+=a.OrthographicFrustum.packedLength);const s=r.Cartesian3.unpack(n,u,y);u+=r.Cartesian3.packedLength;const p=t.Quaternion.unpack(n,u,k),m=1===n[u+=t.Quaternion.packedLength];if(!e.defined(i))return new l({frustum:c,origin:s,orientation:p,_drawNearPlane:m});const d=o===i._frustumType?i._frustum:void 0;return i._frustum=c.clone(d),i._frustumType=o,i._origin=r.Cartesian3.clone(s,i._origin),i._orientation=t.Quaternion.clone(p,i._orientation),i._drawNearPlane=m,i},l.createGeometry=function(e){const r=e._frustumType,o=e._frustum,c=e._origin,s=e._orientation,p=e._drawNearPlane,m=new Float64Array(24);a.FrustumGeometry._computeNearFarPlanes(c,s,r,o,m);const d=new i.GeometryAttributes({position:new u.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:m})});let f,h;const g=p?2:1,_=new Uint16Array(8*(g+1));let k=p?0:1;for(;k<2;++k)f=p?8*k:0,h=4*k,_[f]=h,_[f+1]=h+1,_[f+2]=h+1,_[f+3]=h+2,_[f+4]=h+2,_[f+5]=h+3,_[f+6]=h+3,_[f+7]=h;for(k=0;k<2;++k)f=8*(g+k),h=4*k,_[f]=h,_[f+1]=h+4,_[f+2]=h+1,_[f+3]=h+5,_[f+4]=h+2,_[f+5]=h+6,_[f+6]=h+3,_[f+7]=h+7;return new u.Geometry({attributes:d,indices:_,primitiveType:u.PrimitiveType.LINES,boundingSphere:t.BoundingSphere.fromVertices(m)})},function(t,r){return e.defined(r)&&(t=l.unpack(t,r)),l.createGeometry(t)}}));
/*! For license information please see EllipsoidGeodesic-ed8a0e40.js.LICENSE.txt */
define(["exports","./Matrix2-73789715","./RuntimeError-4f8ec8a2","./defaultValue-97284df2","./ComponentDatatype-e7fbe225"],(function(t,a,i,n,e){"use strict";function s(t,a,i,n,e,o,r){const d=function(t,a){return t*a*(4+t*(4-3*a))/16}(t,i);return(1-d)*t*a*(n+d*e*(r+d*o*(2*r*r-1)))}const o=new a.Cartesian3,r=new a.Cartesian3;function h(t,i,n,d){a.Cartesian3.normalize(d.cartographicToCartesian(i,r),o),a.Cartesian3.normalize(d.cartographicToCartesian(n,r),r),function(t,a,i,n,o,r,d){const u=(a-i)/a,l=r-n,M=Math.atan((1-u)*Math.tan(o)),g=Math.atan((1-u)*Math.tan(d)),p=Math.cos(M),_=Math.sin(M),f=Math.cos(g),m=Math.sin(g),C=p*f,H=p*m,v=_*m,O=_*f;let S,q,U,A,R,b=l,w=e.CesiumMath.TWO_PI,y=Math.cos(b),E=Math.sin(b);do{y=Math.cos(b),E=Math.sin(b);const t=H-O*y;let a;U=Math.sqrt(f*f*E*E+t*t),q=v+C*y,S=Math.atan2(U,q),0===U?(a=0,A=1):(a=C*E/U,A=1-a*a),w=b,R=q-2*v/A,isFinite(R)||(R=0),b=l+s(u,a,A,S,U,q,R)}while(Math.abs(b-w)>e.CesiumMath.EPSILON12);const x=A*(a*a-i*i)/(i*i),D=x*(256+x*(x*(74-47*x)-128))/1024,P=R*R,T=i*(1+x*(4096+x*(x*(320-175*x)-768))/16384)*(S-D*U*(R+D*(q*(2*P-1)-D*R*(4*U*U-3)*(4*P-3)/6)/4)),z=Math.atan2(f*E,H-O*y),F=Math.atan2(p*E,H*y-O);t._distance=T,t._startHeading=z,t._endHeading=F,t._uSquared=x}(t,d.maximumRadius,d.minimumRadius,i.longitude,i.latitude,n.longitude,n.latitude),t._start=a.Cartographic.clone(i,t._start),t._end=a.Cartographic.clone(n,t._end),t._start.height=0,t._end.height=0,function(t){const a=t._uSquared,i=t._ellipsoid.maximumRadius,n=t._ellipsoid.minimumRadius,e=(i-n)/i,o=Math.cos(t._startHeading),r=Math.sin(t._startHeading),d=(1-e)*Math.tan(t._start.latitude),u=1/Math.sqrt(1+d*d),l=u*d,M=Math.atan2(d,o),g=u*r,p=g*g,_=1-p,f=Math.sqrt(_),m=a/4,C=m*m,H=C*m,v=C*C,O=1+m-3*C/4+5*H/4-175*v/64,S=1-m+15*C/8-35*H/8,q=1-3*m+35*C/4,U=1-5*m,A=O*M-S*Math.sin(2*M)*m/2-q*Math.sin(4*M)*C/16-U*Math.sin(6*M)*H/48-5*Math.sin(8*M)*v/512,R=t._constants;R.a=i,R.b=n,R.f=e,R.cosineHeading=o,R.sineHeading=r,R.tanU=d,R.cosineU=u,R.sineU=l,R.sigma=M,R.sineAlpha=g,R.sineSquaredAlpha=p,R.cosineSquaredAlpha=_,R.cosineAlpha=f,R.u2Over4=m,R.u4Over16=C,R.u6Over64=H,R.u8Over256=v,R.a0=O,R.a1=S,R.a2=q,R.a3=U,R.distanceRatio=A}(t)}function c(t,i,e){const o=n.defaultValue(e,a.Ellipsoid.WGS84);this._ellipsoid=o,this._start=new a.Cartographic,this._end=new a.Cartographic,this._constants={},this._startHeading=void 0,this._endHeading=void 0,this._distance=void 0,this._uSquared=void 0,n.defined(t)&&n.defined(i)&&h(this,t,i,o)}Object.defineProperties(c.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},startHeading:{get:function(){return this._startHeading}},endHeading:{get:function(){return this._endHeading}}}),c.prototype.setEndPoints=function(t,a){h(this,t,a,this._ellipsoid)},c.prototype.interpolateUsingFraction=function(t,a){return this.interpolateUsingSurfaceDistance(this._distance*t,a)},c.prototype.interpolateUsingSurfaceDistance=function(t,i){const e=this._constants,o=e.distanceRatio+t/e.b,r=Math.cos(2*o),d=Math.cos(4*o),u=Math.cos(6*o),l=Math.sin(2*o),M=Math.sin(4*o),g=Math.sin(6*o),p=Math.sin(8*o),_=o*o,f=o*_,m=e.u8Over256,C=e.u2Over4,H=e.u6Over64,v=e.u4Over16;let O=2*f*m*r/3+o*(1-C+7*v/4-15*H/4+579*m/64-(v-15*H/4+187*m/16)*r-(5*H/4-115*m/16)*d-29*m*u/16)+(C/2-v+71*H/32-85*m/16)*l+(5*v/16-5*H/4+383*m/96)*M-_*((H-11*m/2)*l+5*m*M/2)+(29*H/96-29*m/16)*g+539*m*p/1536;const S=Math.asin(Math.sin(O)*e.cosineAlpha),q=Math.atan(e.a/e.b*Math.tan(S));O-=e.sigma;const U=Math.cos(2*e.sigma+O),A=Math.sin(O),R=Math.cos(O),b=e.cosineU*R,w=e.sineU*A,y=Math.atan2(A*e.sineHeading,b-w*e.cosineHeading)-s(e.f,e.sineAlpha,e.cosineSquaredAlpha,O,A,R,U);return n.defined(i)?(i.longitude=this._start.longitude+y,i.latitude=q,i.height=0,i):new a.Cartographic(this._start.longitude+y,q,0)},t.EllipsoidGeodesic=c}));
define(["exports","./Transforms-01e95659","./Matrix2-7146c9ca","./Matrix3-a348023f","./defaultValue-0a909f67","./EllipsoidTangentPlane-6308603a","./Math-e97915da","./Plane-8575e17c"],(function(a,t,e,n,r,i,s,o){"use strict";function c(a,t){this.center=n.Cartesian3.clone(r.defaultValue(a,n.Cartesian3.ZERO)),this.halfAxes=n.Matrix3.clone(r.defaultValue(t,n.Matrix3.ZERO))}c.packedLength=n.Cartesian3.packedLength+n.Matrix3.packedLength,c.pack=function(a,t,e){return e=r.defaultValue(e,0),n.Cartesian3.pack(a.center,t,e),n.Matrix3.pack(a.halfAxes,t,e+n.Cartesian3.packedLength),t},c.unpack=function(a,t,e){return t=r.defaultValue(t,0),r.defined(e)||(e=new c),n.Cartesian3.unpack(a,t,e.center),n.Matrix3.unpack(a,t+n.Cartesian3.packedLength,e.halfAxes),e};const C=new n.Cartesian3,u=new n.Cartesian3,l=new n.Cartesian3,d=new n.Cartesian3,h=new n.Cartesian3,x=new n.Cartesian3,m=new n.Matrix3,M={unitary:new n.Matrix3,diagonal:new n.Matrix3};c.fromPoints=function(a,t){if(r.defined(t)||(t=new c),!r.defined(a)||0===a.length)return t.halfAxes=n.Matrix3.ZERO,t.center=n.Cartesian3.ZERO,t;let e;const i=a.length,s=n.Cartesian3.clone(a[0],C);for(e=1;e<i;e++)n.Cartesian3.add(s,a[e],s);const o=1/i;n.Cartesian3.multiplyByScalar(s,o,s);let f,p=0,g=0,y=0,b=0,N=0,T=0;for(e=0;e<i;e++)f=n.Cartesian3.subtract(a[e],s,u),p+=f.x*f.x,g+=f.x*f.y,y+=f.x*f.z,b+=f.y*f.y,N+=f.y*f.z,T+=f.z*f.z;p*=o,g*=o,y*=o,b*=o,N*=o,T*=o;const O=m;O[0]=p,O[1]=g,O[2]=y,O[3]=g,O[4]=b,O[5]=N,O[6]=y,O[7]=N,O[8]=T;const A=n.Matrix3.computeEigenDecomposition(O,M),P=n.Matrix3.clone(A.unitary,t.halfAxes);let I=n.Matrix3.getColumn(P,0,d),R=n.Matrix3.getColumn(P,1,h),E=n.Matrix3.getColumn(P,2,x),S=-Number.MAX_VALUE,U=-Number.MAX_VALUE,L=-Number.MAX_VALUE,z=Number.MAX_VALUE,B=Number.MAX_VALUE,V=Number.MAX_VALUE;for(e=0;e<i;e++)f=a[e],S=Math.max(n.Cartesian3.dot(I,f),S),U=Math.max(n.Cartesian3.dot(R,f),U),L=Math.max(n.Cartesian3.dot(E,f),L),z=Math.min(n.Cartesian3.dot(I,f),z),B=Math.min(n.Cartesian3.dot(R,f),B),V=Math.min(n.Cartesian3.dot(E,f),V);I=n.Cartesian3.multiplyByScalar(I,.5*(z+S),I),R=n.Cartesian3.multiplyByScalar(R,.5*(B+U),R),E=n.Cartesian3.multiplyByScalar(E,.5*(V+L),E);const _=n.Cartesian3.add(I,R,t.center);n.Cartesian3.add(_,E,_);const k=l;return k.x=S-z,k.y=U-B,k.z=L-V,n.Cartesian3.multiplyByScalar(k,.5,k),n.Matrix3.multiplyByScale(t.halfAxes,k,t.halfAxes),t};const f=new n.Cartesian3,p=new n.Cartesian3;function w(a,t,e,i,s,o,C,u,l,d,h){r.defined(h)||(h=new c);const x=h.halfAxes;n.Matrix3.setColumn(x,0,t,x),n.Matrix3.setColumn(x,1,e,x),n.Matrix3.setColumn(x,2,i,x);let m=f;m.x=(s+o)/2,m.y=(C+u)/2,m.z=(l+d)/2;const M=p;M.x=(o-s)/2,M.y=(u-C)/2,M.z=(d-l)/2;const g=h.center;return m=n.Matrix3.multiplyByVector(x,m,m),n.Cartesian3.add(a,m,g),n.Matrix3.multiplyByScale(x,M,x),h}const g=new n.Cartographic,y=new n.Cartesian3,b=new n.Cartographic,N=new n.Cartographic,T=new n.Cartographic,O=new n.Cartographic,A=new n.Cartographic,P=new n.Cartesian3,I=new n.Cartesian3,R=new n.Cartesian3,E=new n.Cartesian3,S=new n.Cartesian3,U=new e.Cartesian2,L=new e.Cartesian2,z=new e.Cartesian2,B=new e.Cartesian2,V=new e.Cartesian2,_=new n.Cartesian3,k=new n.Cartesian3,W=new n.Cartesian3,X=new n.Cartesian3,q=new e.Cartesian2,D=new n.Cartesian3,j=new n.Cartesian3,Z=new n.Cartesian3,v=new o.Plane(n.Cartesian3.UNIT_X,0);c.fromRectangle=function(a,t,C,u,l){let d,h,x,m,M,f,p;if(t=r.defaultValue(t,0),C=r.defaultValue(C,0),u=r.defaultValue(u,n.Ellipsoid.WGS84),a.width<=s.CesiumMath.PI){const r=e.Rectangle.center(a,g),s=u.cartographicToCartesian(r,y),_=new i.EllipsoidTangentPlane(s,u);p=_.plane;const k=r.longitude,W=a.south<0&&a.north>0?0:r.latitude,X=n.Cartographic.fromRadians(k,a.north,C,b),q=n.Cartographic.fromRadians(a.west,a.north,C,N),D=n.Cartographic.fromRadians(a.west,W,C,T),j=n.Cartographic.fromRadians(a.west,a.south,C,O),Z=n.Cartographic.fromRadians(k,a.south,C,A),v=u.cartographicToCartesian(X,P);let Y=u.cartographicToCartesian(q,I);const G=u.cartographicToCartesian(D,R);let F=u.cartographicToCartesian(j,E);const H=u.cartographicToCartesian(Z,S),J=_.projectPointToNearestOnPlane(v,U),K=_.projectPointToNearestOnPlane(Y,L),Q=_.projectPointToNearestOnPlane(G,z),$=_.projectPointToNearestOnPlane(F,B),aa=_.projectPointToNearestOnPlane(H,V);return d=Math.min(K.x,Q.x,$.x),h=-d,m=Math.max(K.y,J.y),x=Math.min($.y,aa.y),q.height=j.height=t,Y=u.cartographicToCartesian(q,I),F=u.cartographicToCartesian(j,E),M=Math.min(o.Plane.getPointDistance(p,Y),o.Plane.getPointDistance(p,F)),f=C,w(_.origin,_.xAxis,_.yAxis,_.zAxis,d,h,x,m,M,f,l)}const Y=a.south>0,G=a.north<0,F=Y?a.south:G?a.north:0,H=e.Rectangle.center(a,g).longitude,J=n.Cartesian3.fromRadians(H,F,C,u,_);J.z=0;const K=Math.abs(J.x)<s.CesiumMath.EPSILON10&&Math.abs(J.y)<s.CesiumMath.EPSILON10?n.Cartesian3.UNIT_X:n.Cartesian3.normalize(J,k),Q=n.Cartesian3.UNIT_Z,$=n.Cartesian3.cross(K,Q,W);p=o.Plane.fromPointNormal(J,K,v);const aa=n.Cartesian3.fromRadians(H+s.CesiumMath.PI_OVER_TWO,F,C,u,X);h=n.Cartesian3.dot(o.Plane.projectPointOntoPlane(p,aa,q),$),d=-h,m=n.Cartesian3.fromRadians(0,a.north,G?t:C,u,D).z,x=n.Cartesian3.fromRadians(0,a.south,Y?t:C,u,j).z;const ta=n.Cartesian3.fromRadians(a.east,F,C,u,Z);return M=o.Plane.getPointDistance(p,ta),f=0,w(J,$,Q,K,d,h,x,m,M,f,l)},c.fromTransformation=function(a,t){return r.defined(t)||(t=new c),t.center=e.Matrix4.getTranslation(a,t.center),t.halfAxes=e.Matrix4.getMatrix3(a,t.halfAxes),t.halfAxes=n.Matrix3.multiplyByScalar(t.halfAxes,.5,t.halfAxes),t},c.clone=function(a,t){if(r.defined(a))return r.defined(t)?(n.Cartesian3.clone(a.center,t.center),n.Matrix3.clone(a.halfAxes,t.halfAxes),t):new c(a.center,a.halfAxes)},c.intersectPlane=function(a,e){const r=a.center,i=e.normal,s=a.halfAxes,o=i.x,C=i.y,u=i.z,l=Math.abs(o*s[n.Matrix3.COLUMN0ROW0]+C*s[n.Matrix3.COLUMN0ROW1]+u*s[n.Matrix3.COLUMN0ROW2])+Math.abs(o*s[n.Matrix3.COLUMN1ROW0]+C*s[n.Matrix3.COLUMN1ROW1]+u*s[n.Matrix3.COLUMN1ROW2])+Math.abs(o*s[n.Matrix3.COLUMN2ROW0]+C*s[n.Matrix3.COLUMN2ROW1]+u*s[n.Matrix3.COLUMN2ROW2]),d=n.Cartesian3.dot(i,r)+e.distance;return d<=-l?t.Intersect.OUTSIDE:d>=l?t.Intersect.INSIDE:t.Intersect.INTERSECTING};const Y=new n.Cartesian3,G=new n.Cartesian3,F=new n.Cartesian3,H=new n.Cartesian3,J=new n.Cartesian3,K=new n.Cartesian3;c.distanceSquaredTo=function(a,t){const e=n.Cartesian3.subtract(t,a.center,f),r=a.halfAxes;let i=n.Matrix3.getColumn(r,0,Y),o=n.Matrix3.getColumn(r,1,G),C=n.Matrix3.getColumn(r,2,F);const u=n.Cartesian3.magnitude(i),l=n.Cartesian3.magnitude(o),d=n.Cartesian3.magnitude(C);let h=!0,x=!0,m=!0;u>0?n.Cartesian3.divideByScalar(i,u,i):h=!1,l>0?n.Cartesian3.divideByScalar(o,l,o):x=!1,d>0?n.Cartesian3.divideByScalar(C,d,C):m=!1;const M=!h+!x+!m;let p,g,y;if(1===M){let a=i;p=o,g=C,x?m||(a=C,g=i):(a=o,p=i),y=n.Cartesian3.cross(p,g,J),a===i?i=y:a===o?o=y:a===C&&(C=y)}else if(2===M){p=i,x?p=o:m&&(p=C);let a=n.Cartesian3.UNIT_Y;a.equalsEpsilon(p,s.CesiumMath.EPSILON3)&&(a=n.Cartesian3.UNIT_X),g=n.Cartesian3.cross(p,a,H),n.Cartesian3.normalize(g,g),y=n.Cartesian3.cross(p,g,J),n.Cartesian3.normalize(y,y),p===i?(o=g,C=y):p===o?(C=g,i=y):p===C&&(i=g,o=y)}else 3===M&&(i=n.Cartesian3.UNIT_X,o=n.Cartesian3.UNIT_Y,C=n.Cartesian3.UNIT_Z);const b=K;b.x=n.Cartesian3.dot(e,i),b.y=n.Cartesian3.dot(e,o),b.z=n.Cartesian3.dot(e,C);let N,T=0;return b.x<-u?(N=b.x+u,T+=N*N):b.x>u&&(N=b.x-u,T+=N*N),b.y<-l?(N=b.y+l,T+=N*N):b.y>l&&(N=b.y-l,T+=N*N),b.z<-d?(N=b.z+d,T+=N*N):b.z>d&&(N=b.z-d,T+=N*N),T};const Q=new n.Cartesian3,$=new n.Cartesian3;c.computePlaneDistances=function(a,e,i,s){r.defined(s)||(s=new t.Interval);let o=Number.POSITIVE_INFINITY,C=Number.NEGATIVE_INFINITY;const u=a.center,l=a.halfAxes,d=n.Matrix3.getColumn(l,0,Y),h=n.Matrix3.getColumn(l,1,G),x=n.Matrix3.getColumn(l,2,F),m=n.Cartesian3.add(d,h,Q);n.Cartesian3.add(m,x,m),n.Cartesian3.add(m,u,m);const M=n.Cartesian3.subtract(m,e,$);let f=n.Cartesian3.dot(i,M);return o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.add(u,d,m),n.Cartesian3.add(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.add(u,d,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.add(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.add(u,d,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.subtract(u,d,m),n.Cartesian3.add(m,h,m),n.Cartesian3.add(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.subtract(u,d,m),n.Cartesian3.add(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.subtract(u,d,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.add(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),n.Cartesian3.subtract(u,d,m),n.Cartesian3.subtract(m,h,m),n.Cartesian3.subtract(m,x,m),n.Cartesian3.subtract(m,e,M),f=n.Cartesian3.dot(i,M),o=Math.min(f,o),C=Math.max(f,C),s.start=o,s.stop=C,s};const aa=new n.Cartesian3,ta=new n.Cartesian3,ea=new n.Cartesian3;c.computeCorners=function(a,t){r.defined(t)||(t=[new n.Cartesian3,new n.Cartesian3,new n.Cartesian3,new n.Cartesian3,new n.Cartesian3,new n.Cartesian3,new n.Cartesian3,new n.Cartesian3]);const e=a.center,i=a.halfAxes,s=n.Matrix3.getColumn(i,0,aa),o=n.Matrix3.getColumn(i,1,ta),C=n.Matrix3.getColumn(i,2,ea);return n.Cartesian3.clone(e,t[0]),n.Cartesian3.subtract(t[0],s,t[0]),n.Cartesian3.subtract(t[0],o,t[0]),n.Cartesian3.subtract(t[0],C,t[0]),n.Cartesian3.clone(e,t[1]),n.Cartesian3.subtract(t[1],s,t[1]),n.Cartesian3.subtract(t[1],o,t[1]),n.Cartesian3.add(t[1],C,t[1]),n.Cartesian3.clone(e,t[2]),n.Cartesian3.subtract(t[2],s,t[2]),n.Cartesian3.add(t[2],o,t[2]),n.Cartesian3.subtract(t[2],C,t[2]),n.Cartesian3.clone(e,t[3]),n.Cartesian3.subtract(t[3],s,t[3]),n.Cartesian3.add(t[3],o,t[3]),n.Cartesian3.add(t[3],C,t[3]),n.Cartesian3.clone(e,t[4]),n.Cartesian3.add(t[4],s,t[4]),n.Cartesian3.subtract(t[4],o,t[4]),n.Cartesian3.subtract(t[4],C,t[4]),n.Cartesian3.clone(e,t[5]),n.Cartesian3.add(t[5],s,t[5]),n.Cartesian3.subtract(t[5],o,t[5]),n.Cartesian3.add(t[5],C,t[5]),n.Cartesian3.clone(e,t[6]),n.Cartesian3.add(t[6],s,t[6]),n.Cartesian3.add(t[6],o,t[6]),n.Cartesian3.subtract(t[6],C,t[6]),n.Cartesian3.clone(e,t[7]),n.Cartesian3.add(t[7],s,t[7]),n.Cartesian3.add(t[7],o,t[7]),n.Cartesian3.add(t[7],C,t[7]),t};const na=new n.Matrix3;c.computeTransformation=function(a,t){r.defined(t)||(t=new e.Matrix4);const i=a.center,s=n.Matrix3.multiplyByUniformScale(a.halfAxes,2,na);return e.Matrix4.fromRotationTranslation(s,i,t)};const ra=new t.BoundingSphere;c.isOccluded=function(a,e){const n=t.BoundingSphere.fromOrientedBoundingBox(a,ra);return!e.isBoundingSphereVisible(n)},c.prototype.intersectPlane=function(a){return c.intersectPlane(this,a)},c.prototype.distanceSquaredTo=function(a){return c.distanceSquaredTo(this,a)},c.prototype.computePlaneDistances=function(a,t,e){return c.computePlaneDistances(this,a,t,e)},c.prototype.computeCorners=function(a){return c.computeCorners(this,a)},c.prototype.computeTransformation=function(a){return c.computeTransformation(this,a)},c.prototype.isOccluded=function(a){return c.isOccluded(this,a)},c.equals=function(a,t){return a===t||r.defined(a)&&r.defined(t)&&n.Cartesian3.equals(a.center,t.center)&&n.Matrix3.equals(a.halfAxes,t.halfAxes)},c.prototype.clone=function(a){return c.clone(this,a)},c.prototype.equals=function(a){return c.equals(this,a)},a.OrientedBoundingBox=c}));
!function(){"use strict";const{Array:e,Object:n,Math:r,Error:a,Uint8Array:i,Uint16Array:c,Uint32Array:o,Int32Array:l,DataView:h,TextEncoder:p,crypto:d,postMessage:u}=globalThis,g=[];for(let e=0;256>e;e++){let n=e;for(let e=0;8>e;e++)1&n?n=n>>>1^3988292384:n>>>=1;g[e]=n}class w{constructor(e){this.crc=e||-1}append(e){let n=0|this.crc;for(let r=0,a=0|e.length;a>r;r++)n=n>>>8^g[255&(n^e[r])];this.crc=n}get(){return~this.crc}}const y={concat(e,n){if(0===e.length||0===n.length)return e.concat(n);const r=e[e.length-1],a=y.getPartial(r);return 32===a?e.concat(n):y._shiftRight(n,a,0|r,e.slice(0,e.length-1))},bitLength(e){const n=e.length;if(0===n)return 0;const r=e[n-1];return 32*(n-1)+y.getPartial(r)},clamp(e,n){if(32*e.length<n)return e;const a=(e=e.slice(0,r.ceil(n/32))).length;return n&=31,a>0&&n&&(e[a-1]=y.partial(n,e[a-1]&2147483648>>n-1,1)),e},partial:(e,n,r)=>32===e?n:(r?0|n:n<<32-e)+1099511627776*e,getPartial:e=>r.round(e/1099511627776)||32,_shiftRight(e,n,r,a){for(void 0===a&&(a=[]);n>=32;n-=32)a.push(r),r=0;if(0===n)return a.concat(e);for(let i=0;i<e.length;i++)a.push(r|e[i]>>>n),r=e[i]<<32-n;const i=e.length?e[e.length-1]:0,c=y.getPartial(i);return a.push(y.partial(n+c&31,n+c>32?r:a.pop(),1)),a}},_={bytes:{fromBits(e){const n=y.bitLength(e)/8,r=new i(n);let a;for(let i=0;n>i;i++)0==(3&i)&&(a=e[i/4]),r[i]=a>>>24,a<<=8;return r},toBits(e){const n=[];let r,a=0;for(r=0;r<e.length;r++)a=a<<8|e[r],3==(3&r)&&(n.push(a),a=0);return 3&r&&n.push(y.partial(8*(3&r),a)),n}}},m={sha1:function(e){e?(this._h=e._h.slice(0),this._buffer=e._buffer.slice(0),this._length=e._length):this.reset()}};m.sha1.prototype={blockSize:512,reset:function(){const e=this;return e._h=this._init.slice(0),e._buffer=[],e._length=0,e},update:function(e){const n=this;"string"==typeof e&&(e=_.utf8String.toBits(e));const r=n._buffer=y.concat(n._buffer,e),i=n._length,c=n._length=i+y.bitLength(e);if(c>9007199254740991)throw new a("Cannot hash more than 2^53 - 1 bits");const l=new o(r);let h=0;for(let e=n.blockSize+i-(n.blockSize+i&n.blockSize-1);c>=e;e+=n.blockSize)n._block(l.subarray(16*h,16*(h+1))),h+=1;return r.splice(0,16*h),n},finalize:function(){const e=this;let n=e._buffer;const a=e._h;n=y.concat(n,[y.partial(1,1)]);for(let e=n.length+2;15&e;e++)n.push(0);for(n.push(r.floor(e._length/4294967296)),n.push(0|e._length);n.length;)e._block(n.splice(0,16));return e.reset(),a},_init:[1732584193,4023233417,2562383102,271733878,3285377520],_key:[1518500249,1859775393,2400959708,3395469782],_f:(e,n,r,a)=>e>19?e>39?e>59?e>79?void 0:n^r^a:n&r|n&a|r&a:n^r^a:n&r|~n&a,_S:(e,n)=>n<<e|n>>>32-e,_block:function(n){const a=this,i=a._h,c=e(80);for(let e=0;16>e;e++)c[e]=n[e];let o=i[0],l=i[1],h=i[2],p=i[3],d=i[4];for(let e=0;79>=e;e++){16>e||(c[e]=a._S(1,c[e-3]^c[e-8]^c[e-14]^c[e-16]));const n=a._S(5,o)+a._f(e,l,h,p)+d+c[e]+a._key[r.floor(e/20)]|0;d=p,p=h,h=a._S(30,l),l=o,o=n}i[0]=i[0]+o|0,i[1]=i[1]+l|0,i[2]=i[2]+h|0,i[3]=i[3]+p|0,i[4]=i[4]+d|0}};const b={getRandomValues(e){const n=new o(e.buffer),t=e=>{let n=987654321;const a=4294967295;return()=>(n=36969*(65535&n)+(n>>16)&a,(((n<<16)+(e=18e3*(65535&e)+(e>>16)&a)&a)/4294967296+.5)*(r.random()>.5?1:-1))};for(let a,i=0;i<e.length;i+=4){const e=t(4294967296*(a||r.random()));a=987654071*e(),n[i/4]=4294967296*e()|0}return e}},k={importKey:e=>new k.hmacSha1(_.bytes.toBits(e)),pbkdf2(e,n,r,i){if(r=r||1e4,0>i||0>r)throw new a("invalid params to pbkdf2");const c=1+(i>>5)<<2;let o,l,p,d,u;const g=new ArrayBuffer(c),w=new h(g);let m=0;const b=y;for(n=_.bytes.toBits(n),u=1;(c||1)>m;u++){for(o=l=e.encrypt(b.concat(n,[u])),p=1;r>p;p++)for(l=e.encrypt(l),d=0;d<l.length;d++)o[d]^=l[d];for(p=0;(c||1)>m&&p<o.length;p++)w.setInt32(m,o[p]),m+=4}return g.slice(0,i/8)},hmacSha1:class{constructor(e){const n=this,r=n._hash=m.sha1,a=[[],[]],i=r.prototype.blockSize/32;n._baseHash=[new r,new r],e.length>i&&(e=r.hash(e));for(let n=0;i>n;n++)a[0][n]=909522486^e[n],a[1][n]=1549556828^e[n];n._baseHash[0].update(a[0]),n._baseHash[1].update(a[1]),n._resultHash=new r(n._baseHash[0])}reset(){const e=this;e._resultHash=new e._hash(e._baseHash[0]),e._updated=!1}update(e){this._updated=!0,this._resultHash.update(e)}digest(){const e=this,n=e._resultHash.finalize(),r=new e._hash(e._baseHash[1]).update(n).finalize();return e.reset(),r}encrypt(e){if(this._updated)throw new a("encrypt on already updated hmac called!");return this.update(e),this.digest(e)}}},v="Invalid pasword",z=16,C={name:"PBKDF2"},S=n.assign({hash:{name:"HMAC"}},C),B=n.assign({iterations:1e3,hash:{name:"SHA-1"}},C),I=["deriveBits"],D=[8,12,16],V=[16,24,32],H=10,K=[0,0,0,0],A=void 0!==d,R=A&&void 0!==d.subtle,W=_.bytes,T=class{constructor(e){const n=this;n._tables=[[[],[],[],[],[]],[[],[],[],[],[]]],n._tables[0][0][0]||n._precompute();const r=n._tables[0][4],i=n._tables[1],c=e.length;let o,l,h,p=1;if(4!==c&&6!==c&&8!==c)throw new a("invalid aes key size");for(n._key=[l=e.slice(0),h=[]],o=c;4*c+28>o;o++){let e=l[o-1];(o%c==0||8===c&&o%c==4)&&(e=r[e>>>24]<<24^r[e>>16&255]<<16^r[e>>8&255]<<8^r[255&e],o%c==0&&(e=e<<8^e>>>24^p<<24,p=p<<1^283*(p>>7))),l[o]=l[o-c]^e}for(let e=0;o;e++,o--){const n=l[3&e?o:o-4];h[e]=4>=o||4>e?n:i[0][r[n>>>24]]^i[1][r[n>>16&255]]^i[2][r[n>>8&255]]^i[3][r[255&n]]}}encrypt(e){return this._crypt(e,0)}decrypt(e){return this._crypt(e,1)}_precompute(){const e=this._tables[0],n=this._tables[1],r=e[4],a=n[4],i=[],c=[];let o,l,h,p;for(let e=0;256>e;e++)c[(i[e]=e<<1^283*(e>>7))^e]=e;for(let d=o=0;!r[d];d^=l||1,o=c[o]||1){let c=o^o<<1^o<<2^o<<3^o<<4;c=c>>8^255&c^99,r[d]=c,a[c]=d,p=i[h=i[l=i[d]]];let u=16843009*p^65537*h^257*l^16843008*d,g=257*i[c]^16843008*c;for(let r=0;4>r;r++)e[r][d]=g=g<<24^g>>>8,n[r][c]=u=u<<24^u>>>8}for(let r=0;5>r;r++)e[r]=e[r].slice(0),n[r]=n[r].slice(0)}_crypt(e,n){if(4!==e.length)throw new a("invalid aes block size");const r=this._key[n],i=r.length/4-2,c=[0,0,0,0],o=this._tables[n],l=o[0],h=o[1],p=o[2],d=o[3],u=o[4];let g,w,y,_=e[0]^r[0],m=e[n?3:1]^r[1],b=e[2]^r[2],k=e[n?1:3]^r[3],v=4;for(let e=0;i>e;e++)g=l[_>>>24]^h[m>>16&255]^p[b>>8&255]^d[255&k]^r[v],w=l[m>>>24]^h[b>>16&255]^p[k>>8&255]^d[255&_]^r[v+1],y=l[b>>>24]^h[k>>16&255]^p[_>>8&255]^d[255&m]^r[v+2],k=l[k>>>24]^h[_>>16&255]^p[m>>8&255]^d[255&b]^r[v+3],v+=4,_=g,m=w,b=y;for(let e=0;4>e;e++)c[n?3&-e:e]=u[_>>>24]<<24^u[m>>16&255]<<16^u[b>>8&255]<<8^u[255&k]^r[v++],g=_,_=m,m=b,b=k,k=g;return c}},U=class{constructor(e,n){this._prf=e,this._initIv=n,this._iv=n}reset(){this._iv=this._initIv}update(e){return this.calculate(this._prf,e,this._iv)}incWord(e){if(255==(e>>24&255)){let n=e>>16&255,r=e>>8&255,a=255&e;255===n?(n=0,255===r?(r=0,255===a?a=0:++a):++r):++n,e=0,e+=n<<16,e+=r<<8,e+=a}else e+=1<<24;return e}incCounter(e){0===(e[0]=this.incWord(e[0]))&&(e[1]=this.incWord(e[1]))}calculate(e,n,r){let a;if(!(a=n.length))return[];const i=y.bitLength(n);for(let i=0;a>i;i+=4){this.incCounter(r);const a=e.encrypt(r);n[i]^=a[0],n[i+1]^=a[1],n[i+2]^=a[2],n[i+3]^=a[3]}return y.clamp(n,i)}},G=k.hmacSha1;class E{constructor(e,r,a){n.assign(this,{password:e,signed:r,strength:a-1,pendingInput:new i(0)})}async append(n){const r=this;if(r.password){const i=f(n,0,D[r.strength]+2);await(async(e,n,r)=>{await te(e,r,f(n,0,D[e.strength]));const i=f(n,D[e.strength]),c=e.keys.passwordVerification;if(c[0]!=i[0]||c[1]!=i[1])throw new a(v)})(r,i,r.password),r.password=null,r.aesCtrGladman=new U(new T(r.keys.key),e.from(K)),r.hmac=new G(r.keys.authentication),n=f(n,D[r.strength]+2)}return ee(r,n,new i(n.length-H-(n.length-H)%z),0,H,!0)}flush(){const e=this,n=e.pendingInput,r=f(n,0,n.length-H),a=f(n,n.length-H);let c=new i(0);if(r.length){const n=W.toBits(r);e.hmac.update(n);const a=e.aesCtrGladman.update(n);c=W.fromBits(a)}let o=!0;if(e.signed){const n=f(W.fromBits(e.hmac.digest()),0,H);for(let e=0;H>e;e++)n[e]!=a[e]&&(o=!1)}return{valid:o,data:c}}}class M{constructor(e,r){n.assign(this,{password:e,strength:r-1,pendingInput:new i(0)})}async append(n){const r=this;let a=new i(0);r.password&&(a=await(async(e,n)=>{const r=(a=new i(D[e.strength]),A&&"function"==typeof d.getRandomValues?d.getRandomValues(a):b.getRandomValues(a));var a;return await te(e,n,r),L(r,e.keys.passwordVerification)})(r,r.password),r.password=null,r.aesCtrGladman=new U(new T(r.keys.key),e.from(K)),r.hmac=new G(r.keys.authentication));const c=new i(a.length+n.length-n.length%z);return c.set(a,0),ee(r,n,c,a.length,0)}flush(){const e=this;let n=new i(0);if(e.pendingInput.length){const r=e.aesCtrGladman.update(W.toBits(e.pendingInput));e.hmac.update(r),n=W.fromBits(r)}const r=f(W.fromBits(e.hmac.digest()),0,H);return{data:L(n,r),signature:r}}}function ee(e,n,r,a,c,o){const l=n.length-c;let h;for(e.pendingInput.length&&(n=L(e.pendingInput,n),r=((e,n)=>{if(n&&n>e.length){const r=e;(e=new i(n)).set(r,0)}return e})(r,l-l%z)),h=0;l-z>=h;h+=z){const i=W.toBits(f(n,h,h+z));o&&e.hmac.update(i);const c=e.aesCtrGladman.update(i);o||e.hmac.update(c),r.set(W.fromBits(c),h+a)}return e.pendingInput=f(n,h),r}async function te(e,r,a){const c=(e=>{if(void 0===p){const n=new i((e=unescape(encodeURIComponent(e))).length);for(let r=0;r<n.length;r++)n[r]=e.charCodeAt(r);return n}return(new p).encode(e)})(r),o=await(u=c,g=S,w=I,A&&R&&"function"==typeof d.subtle.importKey?d.subtle.importKey("raw",u,g,!1,w):k.importKey(u)),l=await(async(e,n,r)=>A&&R&&"function"==typeof d.subtle.deriveBits?await d.subtle.deriveBits(e,n,r):k.pbkdf2(n,e.salt,B.iterations,r))(n.assign({salt:a},B),o,8*(2*V[e.strength]+2)),h=new i(l);var u,g,w;e.keys={key:W.toBits(f(h,0,V[e.strength])),authentication:W.toBits(f(h,V[e.strength],2*V[e.strength])),passwordVerification:f(h,2*V[e.strength])}}function L(e,n){let r=e;return e.length+n.length&&(r=new i(e.length+n.length),r.set(e,0),r.set(n,e.length)),r}function f(e,n,r){return e.subarray(n,r)}class j{constructor(e,r){n.assign(this,{password:e,passwordVerification:r}),ae(this,e)}append(e){const n=this;if(n.password){const r=ne(n,e.subarray(0,12));if(n.password=null,r[11]!=n.passwordVerification)throw new a(v);e=e.subarray(12)}return ne(n,e)}flush(){return{valid:!0,data:new i(0)}}}class x{constructor(e,r){n.assign(this,{password:e,passwordVerification:r}),ae(this,e)}append(e){const n=this;let r,a;if(n.password){n.password=null;const c=d.getRandomValues(new i(12));c[11]=n.passwordVerification,r=new i(e.length+c.length),r.set(se(n,c),0),a=12}else r=new i(e.length),a=0;return r.set(se(n,e),a),r}flush(){return{data:new i(0)}}}function ne(e,n){const r=new i(n.length);for(let a=0;a<n.length;a++)r[a]=re(e)^n[a],P(e,r[a]);return r}function se(e,n){const r=new i(n.length);for(let a=0;a<n.length;a++)r[a]=re(e)^n[a],P(e,n[a]);return r}function ae(e,n){e.keys=[305419896,591751049,878082192],e.crcKey0=new w(e.keys[0]),e.crcKey2=new w(e.keys[2]);for(let r=0;r<n.length;r++)P(e,n.charCodeAt(r))}function P(e,n){e.crcKey0.append([n]),e.keys[0]=~e.crcKey0.get(),e.keys[1]=ce(e.keys[1]+ie(e.keys[0])),e.keys[1]=ce(r.imul(e.keys[1],134775813)+1),e.crcKey2.append([e.keys[1]>>>24]),e.keys[2]=~e.crcKey2.get()}function re(e){const n=2|e.keys[2];return ie(r.imul(n,1^n)>>>8)}function ie(e){return 255&e}function ce(e){return 4294967295&e}const F="deflate",O="inflate",q="Invalid signature";class J{constructor(e,{signature:r,password:a,signed:i,compressed:c,zipCrypto:o,passwordVerification:l,encryptionStrength:h},{chunkSize:p}){const d=!!a;n.assign(this,{signature:r,encrypted:d,signed:i,compressed:c,inflate:c&&new e({chunkSize:p}),crc32:i&&new w,zipCrypto:o,decrypt:d&&o?new j(a,l):new E(a,i,h)})}async append(e){const n=this;return n.encrypted&&e.length&&(e=await n.decrypt.append(e)),n.compressed&&e.length&&(e=await n.inflate.append(e)),(!n.encrypted||n.zipCrypto)&&n.signed&&e.length&&n.crc32.append(e),e}async flush(){const e=this;let n,r=new i(0);if(e.encrypted){const n=e.decrypt.flush();if(!n.valid)throw new a(q);r=n.data}if((!e.encrypted||e.zipCrypto)&&e.signed){const r=new h(new i(4).buffer);if(n=e.crc32.get(),r.setUint32(0,n),e.signature!=r.getUint32(0,!1))throw new a(q)}return e.compressed&&(r=await e.inflate.append(r)||new i(0),await e.inflate.flush()),{data:r,signature:n}}}class N{constructor(e,{encrypted:r,signed:a,compressed:i,level:c,zipCrypto:o,password:l,passwordVerification:h,encryptionStrength:p},{chunkSize:d}){n.assign(this,{encrypted:r,signed:a,compressed:i,deflate:i&&new e({level:c||5,chunkSize:d}),crc32:a&&new w,zipCrypto:o,encrypt:r&&o?new x(l,h):new M(l,p)})}async append(e){const n=this;let r=e;return n.compressed&&e.length&&(r=await n.deflate.append(e)),n.encrypted&&r.length&&(r=await n.encrypt.append(r)),(!n.encrypted||n.zipCrypto)&&n.signed&&e.length&&n.crc32.append(e),r}async flush(){const e=this;let n,r=new i(0);if(e.compressed&&(r=await e.deflate.flush()||new i(0)),e.encrypted){r=await e.encrypt.append(r);const a=e.encrypt.flush();n=a.signature;const c=new i(r.length+a.data.length);c.set(r,0),c.set(a.data,r.length),r=c}return e.encrypted&&!e.zipCrypto||!e.signed||(n=e.crc32.get()),{data:r,signature:n}}}const Q={init(e){e.scripts&&e.scripts.length&&importScripts.apply(void 0,e.scripts);const n=e.options;let r;var a,i,c;self.initCodec&&self.initCodec(),n.codecType.startsWith(F)?r=self.Deflate:n.codecType.startsWith(O)&&(r=self.Inflate),a=r,i=n,c=e.config,X=i.codecType.startsWith(F)?new N(a,i,c):i.codecType.startsWith(O)?new J(a,i,c):void 0},append:async e=>({data:await X.append(e.data)}),flush:()=>X.flush()};let X;function pe(e,r,a){return class{constructor(c){const o=this;o.codec=new e(n.assign({},r,c)),a(o.codec,(e=>{if(o.pendingData){const n=o.pendingData;o.pendingData=new i(n.length+e.length),o.pendingData.set(n,0),o.pendingData.set(e,n.length)}else o.pendingData=new i(e)}))}append(e){return this.codec.push(e),s(this)}flush(){return this.codec.push(new i(0),!0),s(this)}};function s(e){if(e.pendingData){const n=e.pendingData;return e.pendingData=null,n}return new i(0)}}addEventListener("message",(async e=>{const n=e.data,r=n.type,a=Q[r];if(a)try{n.data&&(n.data=new i(n.data));const e=await a(n)||{};if(e.type=r,e.data)try{e.data=e.data.buffer,u(e,[e.data])}catch{u(e)}else u(e)}catch(e){u({type:r,error:{message:e.message,stack:e.stack}})}})),self.initCodec=()=>{const{Deflate:e,Inflate:n}=((e,n={},r)=>({Deflate:pe(e.Deflate,n.deflate,r),Inflate:pe(e.Inflate,n.inflate,r)}))(pako,{deflate:{raw:!0},inflate:{raw:!0}},((e,n)=>e.onData=n));self.Deflate=e,self.Inflate=n}}();